include "sc_usermap.tmh"

define SC_CONTROL_DEBUG 0;

char coupled;
char joyx_mode;

int joyx_zrot() {
	// Set JOYX to DX_ZROT_AXIS for Yaw in Star Citizen
	DXSetAxis(DX_X_AXIS, 0);
	MapAxis(&Joystick, JOYX, DX_ZROT_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
}

int joyx_x() {
	// Set JOYX to DX_X_AXIS, Star Citizen's default.
	DXSetAxis(DX_ZROT_AXIS, 0);
	MapAxis(&Joystick, JOYX, DX_X_AXIS, AXIS_NORMAL, MAP_ABSOLUTE);
}

int set_yaw_default() {
	// Turn joy_x to DX_ZROT_AXIS and use that to yaw instead of roll in SC
	if (coupled == 1) joyx_zrot();
	joyx_mode = 0;
}

int set_roll_default() {
	// Return joy_x to DX_X_AXIS, Star Citizen's default
	if (coupled == 1) joyx_x();
	joyx_mode = 1;
}

int toggle_coupled() {
	// Set joyx default mode depending on coupled/uncoupled
	ActKey(PULSE+KEYON+CAPS);

	// We will swap the zrot function between yaw and strafe_longitudinal
	DXSetAxis(DX_ZROT_AXIS, 0);
	if (coupled) {		// then decouple
		if (joyx_mode == 0) { 
			joyx_x(); // Decoupled + yaw mode
		}
		// Map left throttle to strafe fwd/back
		MapAxis(&Throttle, THR_LEFT, DX_ZROT_AXIS, AXIS_REVERSED, MAP_ABSOLUTE);
		coupled = 0;
	}
	else {	// turn on coupling
		MapAxis(&Throttle, THR_LEFT, 0);  // Disable left throttle
		if (joyx_mode == 0) {  // coupled + yaw mode, set JOYX to ROTZ
			joyx_zrot();
		}
		coupled = 1;
	}
}

int StarCitizen_Init() {
	coupled = 1;
	
	if (SC_D_ROLL[SC_ROLL]) {
		set_roll_default();
	} else {
		set_yaw_default();
	}

	if (SC_DECOUPLE_IS_TOGGLE == 0) {	// Press release mode, probe state
		if (SC_D_DECOUPLE[SC_DECOUPLE]) {
			toggle_coupled();  // set state to 0 and set controls
		}
	}

	// MapAxis(&Throttle, THR_LEFT, DX_ZROT_AXIS, AXIS_REVERSED, MAP_ABSOLUTE);
	// SetSCurve(&Throttle, THR_LEFT, 0, 0, 0, 0, 0);
	MapKey(&SC_D_DECOUPLE, SC_DECOUPLE, EXEC("toggle_coupled();"));
	if (SC_DECOUPLE_IS_TOGGLE == 0)
		MapKeyR(&SC_D_DECOUPLE, SC_DECOUPLE, EXEC("toggle_coupled();"));
	MapKey(&SC_D_ROLL, SC_ROLL, EXEC("set_roll_default();"));
	MapKey(&SC_D_YAW, SC_YAW, EXEC("set_yaw_default();"));
	
	printf("SC_Control by Solarfly - MIT License\xa\xa");
	printf("Star Citizen Controls are now configured.\xa");
	printf("\xaStick priority is set to ");
	if (joyx_mode) printf("roll"); else printf("yaw");
	printf(".\xa");
	printf("Your engines are ");
	if (coupled) printf("coupled"); else printf("decoupled, check your switch");
	printf(".\xa");
}